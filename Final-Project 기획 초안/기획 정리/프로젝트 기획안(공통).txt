1. 프로젝트 개요
가. 목표
Spring Boot 기반의 웹 애플리케이션 PoC(Proof of Concept, 기술 검증)를 1.5개월 내에 성공적으로 완성한다.
개발 역량(Java, Spring, JPA, Git 등) 향상과 더불어, 성공적인 팀 협업 경험을 쌓는다.
단순한 기술 구현을 넘어, 사회 문제에 대한 이해와 해결 능력을 보여주는 포트폴리오를 제작한다.
나. 핵심 제약 조건
인원: 주니어 개발자 6명
기간: 1.5개월 (총 6주)
결과물: 핵심 기능이 동작하는 MVP(Minimum Viable Product, 최소 기능 제품)
다. 공통 기술 스택 (추천)
Backend: Java 17+, Spring Boot 3.x
Database: MySQL 또는 PostgreSQL
Data Access: Spring Data JPA
Security: Spring Security + JWT
Version Control: Git, GitHub
Build Tool: Gradle
라. 추천 협업 방식: 2-2-2 마이크로서비스(MSA) 팀 구성
6명의 인원을 가장 효율적으로 활용하고, 현대적인 아키텍처 경험을 쌓기 위해 3개의 마이크로서비스로 기능을 분리하여 2명씩 전담하는 방식을 추천합니다.

API Gateway (1~2주차에 1명이 담당, 이후 각자 연동): 모든 요청의 입구. Spring Cloud Gateway 사용.
서비스 A팀 (2명): 특정 도메인의 핵심 기능 담당
서비스 B팀 (2명): 다른 도메인의 핵심 기능 담당
서비스 C팀 (2명): 또 다른 도메인의 핵심 기능 담당

3. 구체적인 실행 로드맵 (6주)
어떤 프로젝트를 선택하든 아래의 로드맵을 따라 진행하는 것을 목표로 합니다.

1주차: 기획 확정 및 설계

[목표] 최종 프로젝트 선정, 팀별 역할 분담, 상세 기능 명세 확정.
[산출물] Git Repository, README, API 명세서(by Swagger), DB 스키마(ERD).
2-3주차: 핵심 기능 구현 (팀별 집중 개발)

[목표] 각 팀은 맡은 마이크로서비스의 핵심 API를 모두 개발 완료. 단위 테스트 작성.
[산출물] 각 서비스별 실행 가능한 Jar 파일, Postman 테스트 결과.
4. 5주차: 서비스 연동 및 통합 테스트

[목표] API Gateway를 통해 모든 서비스를 연결하고, 회원가입부터 핵심 기능까지 이어지는 전체 시나리오 테스트.
[산출물] 통합 테스트 시나리오 문서, 주요 버그 리포트.
5주차: 프론트엔드 연동 및 안정화

[목표] 핵심 기능을 사용자가 눈으로 확인할 수 있는 최소한의 UI(웹 페이지) 개발 및 연동. (Thymeleaf 추천)
[산출물] 사용자가 직접 조작 가능한 데모 웹사이트.
6주차: 문서화, 리팩토링 및 발표 준비

[목표] 최종 버그 수정, 코드 가독성 개선, 프로젝트 소개 README 최종 완성, 발표 자료(PPT) 제작.
[산출물] 완성된 소스코드, 실행 가능한 데모, 발표 자료.